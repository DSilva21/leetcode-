class Solution {
    public void rotate(int[] nums, int k) {
        int temp,prev;
        for(int i=0;i<k;i++)
        {
            prev=nums[nums.length-1];
            for(int j=0;j<nums.length;j++)
            {
                temp=nums[j];
                
                nums[j]=prev;
                
                prev=temp;
            }
        }
    }
} //brute force


class Solution {
  public void rotate(int[] nums, int k) {
    int[] a = new int[nums.length];
    for (int i = 0; i < nums.length; i++) {
      a[(i + k) % nums.length] = nums[i];
    }
    for (int i = 0; i < nums.length; i++) {
      nums[i] = a[i];
    }
  }
}  //extra array


class Solution {
  public void rotate(int[] nums, int k) {
    k %= nums.length;
    reverse(nums, 0, nums.length - 1);
    reverse(nums, 0, k - 1);
    reverse(nums, k, nums.length - 1);
  }
  public void reverse(int[] nums, int start, int end) {
    while (start < end) {
      int temp = nums[start];
      nums[start] = nums[end];
      nums[end] = temp;
      start++;
      end--;
    }
  }
} // reverse